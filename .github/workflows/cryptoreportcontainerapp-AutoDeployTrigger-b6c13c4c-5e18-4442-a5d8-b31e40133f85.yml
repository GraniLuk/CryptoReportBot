name: Trigger auto deployment for cryptoreportcontainerapp

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - '**'
    - '.github/workflows/cryptoreportcontainerapp-AutoDeployTrigger-b6c13c4c-5e18-4442-a5d8-b31e40133f85.yml'

  # Allow manual trigger 
  workflow_dispatch:      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write #This is required for requesting the OIDC JWT Token
      contents: read #Required when GH token is used to authenticate with private repo

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_SUBSCRIPTION_ID }}
          
      - name: Create .NET Dockerfile for production
        run: |
          cat > prod.dockerfile << 'EOF'
          FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
          WORKDIR /app
          
          # Copy everything and restore as distinct layers
          COPY . .
          RUN dotnet restore
          
          # Build and publish a release
          RUN dotnet publish -c Release -o out
          
          # Build runtime image
          FROM mcr.microsoft.com/dotnet/aspnet:9.0
          WORKDIR /app
          COPY --from=build /app/out .
          
          # Set environment variables
          ENV ASPNETCORE_URLS=http://+:80
          ENV alerts_bot_token=${alerts_bot_token}
          ENV azure_function_key=${azure_function_key}
          ENV azure-function-url=${azure-function-url}
          
          EXPOSE 80
          ENTRYPOINT ["dotnet", "CryptoReportBot.dll"]
          EOF

      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}
          dockerfilePath: prod.dockerfile
          registryUrl: cryptoreportcontainer.azurecr.io
          registryUsername: ${{ secrets.CRYPTOREPORTCONTAINERAPP_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.CRYPTOREPORTCONTAINERAPP_REGISTRY_PASSWORD }}
          containerAppName: cryptoreportcontainerapp
          resourceGroup: alertsfunctiongrani
          imageToBuild: cryptoreportcontainer.azurecr.io/cryptoreportcontainerapp:${{ github.sha }}
          environmentVariables: |
            alerts_bot_token=${{ secrets.ALERTS_BOT_TOKEN }}
            azure_function_key=${{ secrets.AZURE_FUNCTION_KEY }}
            azure-function-url=${{ secrets.AZURE_FUNCTION_URL }}
