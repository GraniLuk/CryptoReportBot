name: Deploy CryptoReportBot to Azure Web App

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - '**'
    - '.github/workflows/cryptoreportcontainerapp-AutoDeployTrigger-b6c13c4c-5e18-4442-a5d8-b31e40133f85.yml'

  # Allow manual trigger 
  workflow_dispatch:      

# Required GitHub Secrets:
# - CRYPTOREPORTCONTAINERAPP_AZURE_CLIENT_ID: Azure service principal client ID
# - CRYPTOREPORTCONTAINERAPP_AZURE_TENANT_ID: Azure tenant ID
# - CRYPTOREPORTCONTAINERAPP_AZURE_SUBSCRIPTION_ID: Azure subscription ID
# - alerts_bot_token: Telegram bot token
# - azure_function_key: Azure Function access key
# - azure_function_url: Main Azure Function URL for alerts
# - allowed_user_ids: Comma-separated list of allowed Telegram user IDs
# - CryptoReportsApiUrl: URL for crypto reports API
# - CryptoReportsApiKey: API key for crypto reports API      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write #This is required for requesting the OIDC JWT Token
      contents: read #Required when GH token is used to authenticate with private repo

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_SUBSCRIPTION_ID }}
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build application
        run: dotnet build src/CryptoReportBot/CryptoReportBot.csproj --configuration Release --no-restore
        
      - name: Publish application  
        run: dotnet publish src/CryptoReportBot/CryptoReportBot.csproj --configuration Release --output ./publish --no-build
        
      - name: List published files
        run: ls -la ./publish

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: CryptoReportBot
          package: ./publish
          
      - name: Configure Web App for .NET 9 Runtime
        run: |
          az webapp config set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --linux-fx-version "DOTNETCORE|9.0"
            
      - name: Restart Web App
        run: |
          az webapp restart \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani
          
      - name: Configure Web App Settings
        run: |
          az webapp config appsettings set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --settings USE_ENVIRONMENT_VARIABLES=true
          
          az webapp config appsettings set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --settings alerts_bot_token="${{ secrets.alerts_bot_token }}"
          
          az webapp config appsettings set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --settings azure_function_key="${{ secrets.azure_function_key }}"
          
          az webapp config appsettings set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --settings azure_function_url="${{ secrets.azure_function_url }}"
          
          az webapp config appsettings set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --settings allowed_user_ids="${{ secrets.allowed_user_ids }}"
          
          az webapp config appsettings set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --settings crypto_reports_api_url="${{ secrets.CryptoReportsApiUrl }}"
          
          az webapp config appsettings set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --settings crypto_reports_api_key="${{ secrets.CryptoReportsApiKey }}"
