name: Deploy CryptoReportBot to Azure Web App

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - '**'
    - '.github/workflows/cryptoreportcontainerapp-AutoDeployTrigger-b6c13c4c-5e18-4442-a5d8-b31e40133f85.yml'

  # Allow manual trigger 
  workflow_dispatch:      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write #This is required for requesting the OIDC JWT Token
      contents: read #Required when GH token is used to authenticate with private repo

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.CRYPTOREPORTCONTAINERAPP_AZURE_SUBSCRIPTION_ID }}
          
      - name: Create .NET Dockerfile for production
        run: |
          cat > prod.dockerfile << 'EOF'
          FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
          WORKDIR /app
          
          # Copy everything and restore as distinct layers
          COPY . .
          RUN dotnet restore
          
          # Build and publish the specific project
          RUN dotnet publish src/CryptoReportBot/CryptoReportBot.csproj -c Release -o out
          
          # Build runtime image
          FROM mcr.microsoft.com/dotnet/aspnet:9.0
          WORKDIR /app
          COPY --from=build /app/out .
          
          # Set basic runtime environment variables
          ENV ASPNETCORE_URLS=http://+:80
          ENV USE_ENVIRONMENT_VARIABLES=true
          ENV ASPNETCORE_ENVIRONMENT=Production
          ENV APPLICATIONINSIGHTS_ROLE_NAME="CryptoReportBot"
          
          EXPOSE 80
          ENTRYPOINT ["dotnet", "CryptoReportBot.dll"]
          EOF

      - name: Login to Azure Container Registry
        run: |
          echo ${{ secrets.CRYPTOREPORTCONTAINERAPP_REGISTRY_PASSWORD }} | docker login cryptoreportcontainer.azurecr.io \
            --username ${{ secrets.CRYPTOREPORTCONTAINERAPP_REGISTRY_USERNAME }} \
            --password-stdin

      - name: Build and push container image to registry
        run: |
          docker build -f prod.dockerfile -t cryptoreportcontainer.azurecr.io/cryptotelegram:${{ github.sha }} .
          docker push cryptoreportcontainer.azurecr.io/cryptotelegram:${{ github.sha }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: CryptoReportBot
          images: cryptoreportcontainer.azurecr.io/cryptotelegram:${{ github.sha }}
          
      - name: Configure Web App Settings
        run: |
          az webapp config appsettings set \
            --name CryptoReportBot \
            --resource-group alertsfunctiongrani \
            --settings \
              USE_ENVIRONMENT_VARIABLES=true \
              alerts_bot_token="${{ secrets.alerts_bot_token }}" \
              azure_function_key="${{ secrets.azure_function_key }}" \
              azure_function_url="${{ secrets.azure_function_url }}" \
              allowed_user_ids="${{ secrets.allowed_user_ids }}" \
              DOCKER_REGISTRY_SERVER_URL="https://cryptoreportcontainer.azurecr.io" \
              DOCKER_REGISTRY_SERVER_USERNAME="${{ secrets.CRYPTOREPORTCONTAINERAPP_REGISTRY_USERNAME }}" \
              DOCKER_REGISTRY_SERVER_PASSWORD="${{ secrets.CRYPTOREPORTCONTAINERAPP_REGISTRY_PASSWORD }}" \
              WEBSITES_ENABLE_APP_SERVICE_STORAGE=false
